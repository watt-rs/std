/// Imports
use std/rt as rt
use std/rt for panic

/// Prints `text` and `\n` to `stdout`
pub extern fn println(text: dyn) = "console.log(text)"

/// Reads line from `stdin`
/// Available runtimes: Deno, Bun
pub extern fn readln(): string = `
  let runtime = rt.which();
  if (runtime == "Deno" ||
      runtime == "Bun") {
    return prompt("");
  }
  else {
    panic("\`readln\` is not implemented for " + runtime + " runtime");
  }
`

/// Reads line from `stdin` with prompt printed to `stdout`
/// Available for runtimes: Deno, Bun
pub extern fn ask(text: dyn): string = `
  let runtime = rt.which();
  if (runtime == "Deno" ||
      runtime == "Bun") {
    return prompt(text);
  }
  else {
    panic("\`ask\` is not implemented for " + runtime + " runtime");
  }
`
